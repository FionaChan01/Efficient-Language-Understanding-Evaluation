<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.ModelMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Model">
    <id column="model_id" jdbcType="INTEGER" property="modelId" />
    <result column="paper_id" jdbcType="INTEGER" property="paperId" />
    <result column="model_remark" jdbcType="REAL" property="modelRemark" />
    <result column="model_flops" jdbcType="REAL" property="modelFlops" />
    <result column="model_params" jdbcType="REAL" property="modelParams" />
    <result column="model_description" jdbcType="VARCHAR" property="modelDescription" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    model_id, paper_id, model_remark, model_flops, model_params, model_description
  </sql>
  <select id="selectByExample" parameterType="com.example.demo.entity.ModelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from model
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from model
    where model_id = #{modelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from model
    where model_id = #{modelId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.demo.entity.ModelExample">
    delete from model
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Model">
    insert into model (model_id, paper_id, model_remark, 
      model_flops, model_params, model_description
      )
    values (#{modelId,jdbcType=INTEGER}, #{paperId,jdbcType=INTEGER}, #{modelRemark,jdbcType=REAL}, 
      #{modelFlops,jdbcType=REAL}, #{modelParams,jdbcType=REAL}, #{modelDescription,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Model">
    insert into model
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="modelId != null">
        model_id,
      </if>
      <if test="paperId != null">
        paper_id,
      </if>
      <if test="modelRemark != null">
        model_remark,
      </if>
      <if test="modelFlops != null">
        model_flops,
      </if>
      <if test="modelParams != null">
        model_params,
      </if>
      <if test="modelDescription != null">
        model_description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="modelId != null">
        #{modelId,jdbcType=INTEGER},
      </if>
      <if test="paperId != null">
        #{paperId,jdbcType=INTEGER},
      </if>
      <if test="modelRemark != null">
        #{modelRemark,jdbcType=REAL},
      </if>
      <if test="modelFlops != null">
        #{modelFlops,jdbcType=REAL},
      </if>
      <if test="modelParams != null">
        #{modelParams,jdbcType=REAL},
      </if>
      <if test="modelDescription != null">
        #{modelDescription,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.demo.entity.ModelExample" resultType="java.lang.Long">
    select count(*) from model
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update model
    <set>
      <if test="record.modelId != null">
        model_id = #{record.modelId,jdbcType=INTEGER},
      </if>
      <if test="record.paperId != null">
        paper_id = #{record.paperId,jdbcType=INTEGER},
      </if>
      <if test="record.modelRemark != null">
        model_remark = #{record.modelRemark,jdbcType=REAL},
      </if>
      <if test="record.modelFlops != null">
        model_flops = #{record.modelFlops,jdbcType=REAL},
      </if>
      <if test="record.modelParams != null">
        model_params = #{record.modelParams,jdbcType=REAL},
      </if>
      <if test="record.modelDescription != null">
        model_description = #{record.modelDescription,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update model
    set model_id = #{record.modelId,jdbcType=INTEGER},
      paper_id = #{record.paperId,jdbcType=INTEGER},
      model_remark = #{record.modelRemark,jdbcType=REAL},
      model_flops = #{record.modelFlops,jdbcType=REAL},
      model_params = #{record.modelParams,jdbcType=REAL},
      model_description = #{record.modelDescription,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Model">
    update model
    <set>
      <if test="paperId != null">
        paper_id = #{paperId,jdbcType=INTEGER},
      </if>
      <if test="modelRemark != null">
        model_remark = #{modelRemark,jdbcType=REAL},
      </if>
      <if test="modelFlops != null">
        model_flops = #{modelFlops,jdbcType=REAL},
      </if>
      <if test="modelParams != null">
        model_params = #{modelParams,jdbcType=REAL},
      </if>
      <if test="modelDescription != null">
        model_description = #{modelDescription,jdbcType=VARCHAR},
      </if>
    </set>
    where model_id = #{modelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Model">
    update model
    set paper_id = #{paperId,jdbcType=INTEGER},
      model_remark = #{modelRemark,jdbcType=REAL},
      model_flops = #{modelFlops,jdbcType=REAL},
      model_params = #{modelParams,jdbcType=REAL},
      model_description = #{modelDescription,jdbcType=VARCHAR}
    where model_id = #{modelId,jdbcType=INTEGER}
  </update>
</mapper>